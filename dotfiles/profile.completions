# -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=-
# grails...

_grailsscripts() {
    #SCRIPT_DIRS="$GRAILS_HOME/scripts ./scripts ~/.grails/scripts"
    SCRIPT_DIRS="$HOME/.grails/scripts ./scripts ./plugins/*/scripts $GRAILS_HOME/scripts ./target/work/plugins/*/scripts"

    if [ -d plugins ]
    then for PLUGIN_DIR in $(ls -d plugins/*/scripts 2> /dev/null); do
            SCRIPT_DIRS="$SCRIPT_DIRS $PLUGIN_DIR"
        done
    fi

    for D in $SCRIPT_DIRS; do
        if [ -d $D ]
        then ls -1 $D/*.groovy 2> /dev/null | sed -E 's/(.*)\/(.*)\.groovy/\2/' | sed -E 's/([A-Z])/-\1/g' | sed -E 's/^-//' | tr "[:upper:]" "[:lower:]"
        fi
    done | sort | uniq | grep -vE "^_"
}
_grails() {
    COMPREPLY=( $(compgen -W "$(_grailsscripts)" -- ${COMP_WORDS[COMP_CWORD]}) )
}

complete -F _grails grails

# set it up for the grails aliases too...
complete -F _grails g
complete -F _grails g+



# -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=-
# use...

_useTools() {
    TOOLS_DIRS="$HOME/devtools"
    for dir in $TOOLS_DIRS; do
        if [ -d $dir ] ; then
            ls -1 $dir
        fi
    done | sort | uniq
}
_use() {
    COMPREPLY=( $(compgen -W "$(_useTools)" -- ${COMP_WORDS[COMP_CWORD]}) )
}

complete -F _use use



# -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=-
# ssh...

function _ssh_completion() { perl -ne 'print "$1 " if /^Host (.+)$/' ~/.ssh/config; }
complete -W "$(_ssh_completion)" ssh



# -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=-
# gradle...
#
# from https://gist.github.com/nolanlawson/8694399
#
# curl -L -s https://gist.github.com/nolanlawson/8694399/raw/gradle-tab-completion.bash -o ~/gradle-tab-completion.bash
#
_gradle() {
    local cur=${COMP_WORDS[COMP_CWORD]}
    local gradle_cmd='gradle'
    if [[ -x ./gradlew ]]; then
        gradle_cmd='./gradlew'
    fi
    if [[ -x ../gradlew ]]; then
        gradle_cmd='../gradlew'
    fi

    local commands=''
    local cache_dir="$HOME/.gradle_tabcompletion"
    mkdir -p $cache_dir

    # TODO: include the gradle version in the checksum?  It's kinda slow
    #local gradle_version=$($gradle_cmd --version --quiet --no-color | grep '^Gradle ' | sed 's/Gradle //g')

    local gradle_files_checksum='';
    if [[ -f build.gradle ]]; then # top-level gradle file
        if [[ -x `which md5` ]]; then # mac
            local all_gradle_files=$(find . -name build.gradle 2>/dev/null)
            gradle_files_checksum=$(md5 -q -s "$(md5 -q $all_gradle_files)")
        else # linux
            gradle_files_checksum=($(find . -name build.gradle | xargs md5sum | md5sum))
        fi
    else # no top-level gradle file
        gradle_files_checksum='no_gradle_files'
    fi
    if [[ -f $cache_dir/$gradle_files_checksum ]]; then # cached! yay!
        commands=$(cat $cache_dir/$gradle_files_checksum)
    else # not cached! boo-urns!
        commands=$($gradle_cmd --no-color --quiet tasks | grep ' - ' | awk '{print $1}' | tr '\n' ' ')
        if [[ ! -z $commands ]]; then
            echo $commands > $cache_dir/$gradle_files_checksum
        fi
    fi
    COMPREPLY=( $(compgen -W "$commands" -- $cur) )
}
complete -F _gradle gradle



# -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=- -=-=-
# ???...
